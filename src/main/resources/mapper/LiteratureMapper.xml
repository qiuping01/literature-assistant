<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yuyuan.literature.mapper.LiteratureMapper">

    <resultMap id="LiteratureResultMap" type="com.yuyuan.literature.entity.Literature">
        <id column="id" property="id"/>
        <result column="original_name" property="originalName"/>
        <result column="file_path" property="filePath"/>
        <result column="file_size" property="fileSize"/>
        <result column="file_type" property="fileType"/>
        <result column="content_length" property="contentLength"/>
        <result column="tags" property="tags" typeHandler="com.baomidou.mybatisplus.extension.handlers.JacksonTypeHandler"/>
        <result column="description" property="description"/>
        <result column="reading_guide" property="readingGuide"/>
        <result column="status" property="status"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="deleted" property="deleted"/>
    </resultMap>


    <!-- 分页查询文献 -->
    <select id="selectLiteraturePage" resultMap="LiteratureResultMap">
        SELECT 
            id,
            original_name,
            file_path,
            file_size,
            file_type,
            content_length,
            tags,
            description,
            reading_guide,
            status,
            create_time,
            update_time,
            deleted
        FROM literature
        <where>
            deleted = 0
            
            <!-- 关键词搜索：文件名、描述、阅读指南 -->
            <if test="req.keyword != null and req.keyword != ''">
                AND (
                    original_name LIKE CONCAT('%', #{req.keyword}, '%')
                    OR description LIKE CONCAT('%', #{req.keyword}, '%')
                    OR reading_guide LIKE CONCAT('%', #{req.keyword}, '%')
                )
            </if>
            
            <!-- 标签过滤 -->
            <if test="req.tags != null and req.tags.size() > 0">
                AND (
                    <foreach collection="req.tags" item="tag" separator=" OR ">
                        JSON_CONTAINS(tags, JSON_QUOTE(#{tag}))
                    </foreach>
                )
            </if>
            
            <!-- 文件类型过滤 -->
            <if test="req.fileType != null and req.fileType != ''">
                AND file_type = #{req.fileType}
            </if>
            
            <!-- 状态过滤 -->
            <if test="req.status != null">
                AND status = #{req.status}
            </if>
            
            <!-- 时间范围过滤 -->
            <if test="req.startDate != null and req.startDate != ''">
                AND DATE(create_time) >= #{req.startDate}
            </if>
            <if test="req.endDate != null and req.endDate != ''">
                AND DATE(create_time) &lt;= #{req.endDate}
            </if>
        </where>
        
        <!-- 排序 -->
        <choose>
            <when test="req.sortField != null and req.sortField != ''">
                ORDER BY ${req.sortField}
                <if test="req.sortOrder != null and req.sortOrder != ''">
                    ${req.sortOrder}
                </if>
            </when>
            <otherwise>
                ORDER BY create_time DESC
            </otherwise>
        </choose>
    </select>

</mapper>
